From 201fd565a1ce44b4af11ce9f245b2fa77c026fed Mon Sep 17 00:00:00 2001
From: Phil Sutter <phil@nwl.cc>
Date: Tue, 27 Apr 2021 10:02:34 +0200
Subject: [PATCH] nft-arp: Make use of ipv4_addr_to_string()

This eliminates quite a bit of redundant code apart from also dropping
use of obsolete function gethostbyaddr().

Signed-off-by: Phil Sutter <phil@nwl.cc>
(cherry picked from commit 1e984079817a3c804eae25dea937d63d18c57a6c)
---
 iptables/nft-arp.c | 99 ++++------------------------------------------
 iptables/xshared.c |  6 +--
 iptables/xshared.h |  3 ++
 3 files changed, 14 insertions(+), 94 deletions(-)

diff --git a/iptables/nft-arp.c b/iptables/nft-arp.c
index ec8147dd58c0d..7c61c31a13c40 100644
--- a/iptables/nft-arp.c
+++ b/iptables/nft-arp.c
@@ -42,78 +42,6 @@ char *arp_opcodes[] =
 	"ARP_NAK",
 };
 
-static char *
-addr_to_dotted(const struct in_addr *addrp)
-{
-	static char buf[20];
-	const unsigned char *bytep;
-
-	bytep = (const unsigned char *) &(addrp->s_addr);
-	sprintf(buf, "%d.%d.%d.%d", bytep[0], bytep[1], bytep[2], bytep[3]);
-	return buf;
-}
-
-static char *
-addr_to_host(const struct in_addr *addr)
-{
-	struct hostent *host;
-
-	if ((host = gethostbyaddr((char *) addr,
-					sizeof(struct in_addr), AF_INET)) != NULL)
-		return (char *) host->h_name;
-
-	return (char *) NULL;
-}
-
-static char *
-addr_to_network(const struct in_addr *addr)
-{
-	struct netent *net;
-
-	if ((net = getnetbyaddr((long) ntohl(addr->s_addr), AF_INET)) != NULL)
-		return (char *) net->n_name;
-
-	return (char *) NULL;
-}
-
-static char *
-addr_to_anyname(const struct in_addr *addr)
-{
-	char *name;
-
-	if ((name = addr_to_host(addr)) != NULL ||
-		(name = addr_to_network(addr)) != NULL)
-		return name;
-
-	return addr_to_dotted(addr);
-}
-
-static char *
-mask_to_dotted(const struct in_addr *mask)
-{
-	int i;
-	static char buf[22];
-	u_int32_t maskaddr, bits;
-
-	maskaddr = ntohl(mask->s_addr);
-
-	if (maskaddr == 0xFFFFFFFFL)
-		/* we don't want to see "/32" */
-		return "";
-
-	i = 32;
-	bits = 0xFFFFFFFEL;
-	while (--i >= 0 && maskaddr != bits)
-		bits <<= 1;
-	if (i >= 0)
-		sprintf(buf, "/%d", i);
-	else
-		/* mask was not a decent combination of 1's and 0's */
-		snprintf(buf, sizeof(buf), "/%s", addr_to_dotted(mask));
-
-	return buf;
-}
-
 static bool need_devaddr(struct arpt_devaddr_info *info)
 {
 	int i;
@@ -403,7 +331,6 @@ static void nft_arp_print_rule_details(const struct iptables_command_state *cs,
 				       unsigned int format)
 {
 	const struct arpt_entry *fw = &cs->arp;
-	char buf[BUFSIZ];
 	char iface[IFNAMSIZ+2];
 	const char *sep = "";
 	int print_iface = 0;
@@ -450,15 +377,10 @@ static void nft_arp_print_rule_details(const struct iptables_command_state *cs,
 	}
 
 	if (fw->arp.smsk.s_addr != 0L) {
-		printf("%s%s", sep, fw->arp.invflags & IPT_INV_SRCIP
-			? "! " : "");
-		if (format & FMT_NUMERIC)
-			sprintf(buf, "%s", addr_to_dotted(&(fw->arp.src)));
-		else
-			sprintf(buf, "%s", addr_to_anyname(&(fw->arp.src)));
-		strncat(buf, mask_to_dotted(&(fw->arp.smsk)),
-			sizeof(buf) - strlen(buf) - 1);
-		printf("-s %s", buf);
+		printf("%s%s-s %s", sep,
+		       fw->arp.invflags & IPT_INV_SRCIP ? "! " : "",
+		       ipv4_addr_to_string(&fw->arp.src,
+					   &fw->arp.smsk, format));
 		sep = " ";
 	}
 
@@ -476,15 +398,10 @@ static void nft_arp_print_rule_details(const struct iptables_command_state *cs,
 after_devsrc:
 
 	if (fw->arp.tmsk.s_addr != 0L) {
-		printf("%s%s", sep, fw->arp.invflags & IPT_INV_DSTIP
-			? "! " : "");
-		if (format & FMT_NUMERIC)
-			sprintf(buf, "%s", addr_to_dotted(&(fw->arp.tgt)));
-		else
-			sprintf(buf, "%s", addr_to_anyname(&(fw->arp.tgt)));
-		strncat(buf, mask_to_dotted(&(fw->arp.tmsk)),
-			sizeof(buf) - strlen(buf) - 1);
-		printf("-d %s", buf);
+		printf("%s%s-d %s", sep,
+		       fw->arp.invflags & IPT_INV_DSTIP ? "! " : "",
+		       ipv4_addr_to_string(&fw->arp.tgt,
+					   &fw->arp.tmsk, format));
 		sep = " ";
 	}
 
diff --git a/iptables/xshared.c b/iptables/xshared.c
index 16c58914e59a5..e3c8072b5ca96 100644
--- a/iptables/xshared.c
+++ b/iptables/xshared.c
@@ -546,9 +546,9 @@ void debug_print_argv(struct argv_store *store)
 }
 #endif
 
-static const char *ipv4_addr_to_string(const struct in_addr *addr,
-				       const struct in_addr *mask,
-				       unsigned int format)
+const char *ipv4_addr_to_string(const struct in_addr *addr,
+				const struct in_addr *mask,
+				unsigned int format)
 {
 	static char buf[BUFSIZ];
 
diff --git a/iptables/xshared.h b/iptables/xshared.h
index 490b19ade5106..e4015c00e2a35 100644
--- a/iptables/xshared.h
+++ b/iptables/xshared.h
@@ -200,6 +200,9 @@ void debug_print_argv(struct argv_store *store);
 #  define debug_print_argv(...) /* nothing */
 #endif
 
+const char *ipv4_addr_to_string(const struct in_addr *addr,
+				const struct in_addr *mask,
+				unsigned int format);
 void print_ipv4_addresses(const struct ipt_entry *fw, unsigned int format);
 void print_ipv6_addresses(const struct ip6t_entry *fw6, unsigned int format);
 
-- 
2.31.1

